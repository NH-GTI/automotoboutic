<?php
/*
StoreCommander
*/
 class ExternHall { const EXTRA_PARAMS_KEY = "\x65\170\x74\162\141\137\x70\141\162\141\155\163"; private $allowedScIp; private $classNameByAction = array("\x75\x73\x61\x67\145" => "\105\x78\x74\145\162\156\x48\141\x6c\154\x55\163\141\x67\x65", "\141\165\164\157\165\160\144\141\x74\145" => "\105\x78\164\x65\162\x6e\110\141\x6c\x6c\x41\x75\x74\x6f\x55\160\x64\141\164\145"); private $actionNeedTrendsCheckup = array("\165\163\141\x67\145"); private $allowedProcess; private $allowedAction; private $extraParamsArray; private $process; private $action; private $distantIpReceived; private $extraParams; private $token; private $paramServer; public function __construct($server) { goto pOAG3; XqFE_: $this->paramServer = $server; goto UfESv; pOAG3: $this->allowedScIp = gethostbyname("\163\164\x6f\162\x65\143\157\x6d\155\x61\x6e\144\x65\162\56\143\x6f\155"); goto KkQ5i; KkQ5i: $this->allowedAction = array_keys($this->classNameByAction); goto XqFE_; UfESv: } public function setPropertiesFromServer() { goto WTJZJ; LRba1: $this->action = array_key_exists("\x48\124\x54\x50\137\130\137\123\x43\x5f\101\x43\x54\x49\117\116", $this->paramServer) ? $this->paramServer["\110\124\124\120\137\x58\137\x53\x43\x5f\x41\103\124\111\x4f\116"] : null; goto MQVtD; MQVtD: $this->extraParams = json_decode(file_get_contents("\x70\x68\x70\x3a\57\x2f\x69\x6e\160\x75\x74"), true); goto zA5Xt; WTJZJ: $this->token = array_key_exists("\110\124\x54\x50\x5f\130\x5f\123\x43\137\x54\x4f\x4b\105\116", $this->paramServer) ? (string) $this->paramServer["\110\x54\x54\x50\137\130\137\x53\103\x5f\x54\x4f\x4b\x45\116"] : null; goto LRba1; zA5Xt: $this->distantIpReceived = array_key_exists("\x48\x54\124\120\137\x58\x5f\123\103\137\111\x50\137\122\105\106\105\x52\x45\122", $this->paramServer) ? (string) $this->paramServer["\x48\124\124\x50\137\x58\x5f\123\x43\137\111\x50\137\122\105\x46\105\x52\x45\x52"] : null; goto gOKia; gOKia: } public function isValidEntrance() { goto Wmvu5; Wmvu5: if (!(!$this->isWhiteListedIp() || !$this->isAllowedAction() || $this->extraParams !== null && !$this->isValidExtraParams())) { goto AlRr9; } goto xtyeK; xtyeK: return false; goto zEPWL; zEPWL: AlRr9: goto Wynvm; Wynvm: return true; goto QVICm; QVICm: } protected function setExtraParams() { goto lHVMI; xq97C: return array(); goto Q2OOL; D8fpQ: $this->extraParamsArray = $this->extraParams[ExternHall::EXTRA_PARAMS_KEY]; goto PgVCU; Q2OOL: ag_qs: goto D8fpQ; lHVMI: if (is_array($this->extraParams)) { goto ag_qs; } goto xq97C; PgVCU: } public function isValidToken() { $localToken = (string) hash("\163\x68\141\x35\61\x32", Configuration::get("\123\x43\x5f\x4c\111\x43\105\116\123\105\x5f\113\105\x59", false, 0, 0)); return $this->token === $localToken; } public function allowSendingData() { goto JAMJ3; quSxt: $settings = json_decode(Configuration::get("\123\103\x5f\x53\105\x54\x54\111\x4e\x47\123", null, 0, 0), true); goto fL0Lp; fL0Lp: if (!(!empty($settings) && array_key_exists("\x41\120\x50\137\x54\x52\x45\116\104\123", $settings) && (int) $settings["\101\120\x50\137\x54\x52\x45\116\104\123"] != 1)) { goto l0nGg; } goto f4e8o; qMn4J: l0nGg: goto xm4Re; f4e8o: return false; goto qMn4J; XbOmK: return true; goto kIX8L; kIX8L: gb7WG: goto quSxt; xm4Re: return true; goto wKeoB; JAMJ3: if (in_array($this->action, $this->actionNeedTrendsCheckup)) { goto gb7WG; } goto XbOmK; wKeoB: } public function doProcess() { goto DIzgh; rkC9j: $currentScFolderName = basename(realpath("\56\56\x2f\56\56\x2f")); goto UTzAJ; rMU9L: $actionObject->doProcess(); goto GmrF_; UTzAJ: if (file_exists(_PS_MODULE_DIR_ . $currentScFolderName . "\x2f" . $scFolderHash)) { goto WQYF9; } goto AiMv8; jsFwm: $this->setExtraParams(); goto AShyi; AiMv8: return; goto gjIsW; DIzgh: global $default_settings, $local_settings, $custom_settings; goto jsFwm; IJngR: require_once _PS_MODULE_DIR_ . $currentScFolderName . "\x2f" . $scFolderHash . "\x2f\123\x43\57\x69\x6e\x69\164\137\x73\143\56\x70\150\160"; goto CGfLV; EC1P8: $scFolderHash = Configuration::get("\x53\103\137\x46\117\114\104\x45\x52\x5f\110\101\x53\110"); goto p7re5; AShyi: $scFolderHash = Configuration::get("\123\x43\137\x46\x4f\x4c\104\x45\x52\x5f\110\101\123\110", null, 0, 0); goto pTnGU; yL9Kk: $actionObject = new $actionClassName($this->extraParamsArray); goto rMU9L; CGfLV: $actionClassName = (string) $this->classNameByAction[$this->action]; goto yL9Kk; p7re5: nuPFM: goto Q584q; gjIsW: WQYF9: goto IJngR; Q1oLu: $_POST = array("\x61\x63\x74\151\x6f\156" => "\x6d\x61\160\160\x69\156\x67\137\160\x72\x6f\x63\145\x73\163", "\x61\152\x61\x78" => 1); goto rkC9j; Q584q: $CRON = true; goto Q1oLu; pTnGU: if (!empty($scFolderHash)) { goto nuPFM; } goto EC1P8; GmrF_: } public function exitPage($code) { goto dv_yG; hilEr: die; goto iA9hH; dv_yG: switch ($code) { case 403: header("\110\x54\x54\x50\x2f\x31\56\61\x20\64\x30\x33\40\106\x6f\162\142\151\x64\x64\x65\156"); goto uIzNE; default: header("\x48\x54\124\x50\x2f\x31\56\61\x20\62\60\x30\x20\117\x4b"); } goto M6lTU; M8YPa: uIzNE: goto hilEr; M6lTU: rL5hP: goto M8YPa; iA9hH: } public function isModuleInstalledAndEnable($scFolder) { goto Fc7Ux; CxZvI: $moduleDataProvider = new PrestaShop\PrestaShop\Adapter\Module\ModuleDataProvider($legacyLogger, Context::getContext()->getTranslator()); goto Ty2vx; C8gX7: goto j2Bh_; goto Tp6Or; QtaIg: $scInstalled = Module::isInstalled($scFolder); goto C8gX7; SNojE: cnclm: goto S3cY_; Ty2vx: $scInstalled = $moduleDataProvider->isInstalled($scFolder); goto iYKa3; iYKa3: j2Bh_: goto H2A3b; Fca9A: return false; goto SNojE; S3cY_: return true; goto CB9WT; Tp6Or: zMJnj: goto i4Y7h; Fc7Ux: if (version_compare(_PS_VERSION_, "\x31\56\67", "\76\x3d")) { goto zMJnj; } goto QtaIg; i4Y7h: $legacyLogger = new PrestaShop\PrestaShop\Adapter\LegacyLogger(); goto CxZvI; H2A3b: if (!(!$scInstalled || !Module::isEnabled($scFolder))) { goto cnclm; } goto Fca9A; CB9WT: } private function isWhiteListedIp() { return $this->allowedScIp == $this->distantIpReceived; } private function isAllowedAction() { return in_array($this->action, $this->allowedAction); } private function isValidExtraParams() { return is_array($this->extraParams) && array_key_exists(ExternHall::EXTRA_PARAMS_KEY, $this->extraParams); } }
